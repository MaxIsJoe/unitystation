name: Download Test Results

on:
  push:
    branches:
      - develop
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed

jobs:
  download:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Download artifact'
        uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const artifact = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            const zipArtifact = artifact.data.artifacts.filter(artifact => artifact.name == 'test-results')[0];
            const download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: zipArtifact.id,
               archive_format: 'zip',
            });
            const outputPath = path.join(process.env.GITHUB_WORKSPACE, 'test-results.zip');
            fs.writeFileSync(outputPath, Buffer.from(download.data));
            console.log('Artifact downloaded to', outputPath);
      - name: 'Extract zip file'
        run: |
          unzip test-results.zip
      - name: 'Read and post errors'
        uses: actions/github-script@v3
        with:
         script: |
            const fs = require('fs');
            const cheerio = require('cheerio');
            const html = fs.readFileSync('./index.html', 'utf8');
            const $ = cheerio.load(html);
            const errors = [];
            $('textarea.code-block').each((i, elem) => {
              errors.push($(elem).text());
            });
            if (errors.length > 0) {
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `Test Errors:\n\n${errors.join('\n')}`,
              });
            }
            else {
                await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `Tests passed.`,
              });
            }